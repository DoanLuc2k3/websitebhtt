import React, { useState } from "react";
import {
  Card,
  Row,
  Col,
  Typography,
  Tag,
  List,
  Form,
  Input,
  Button,
  message,
  Timeline,
  Space,
  Select, 
  Divider, 
} from "antd";
import {
  ApiOutlined,
  DatabaseOutlined,
  CloudOutlined,
  InfoCircleOutlined,
  SyncOutlined,
  QuestionCircleOutlined,
  MessageOutlined,
  MailOutlined,
  PhoneOutlined,
  SearchOutlined, 
  ToolOutlined, 
} from "@ant-design/icons";

const { Title, Paragraph, Text } = Typography;
const { TextArea, Search } = Input;
const { Option } = Select;

const SupportDashboard = () => {
  const [diagnosisId, setDiagnosisId] = useState("");
  const [form] = Form.useForm();
  
  // M√†u s·∫Øc th·ªëng nh·∫•t
  const PRIMARY_BLUE = '#1677ff';
  const PRIMARY_PURPLE = '#722ed1';

  // D·ªØ li·ªáu tr·∫°ng th√°i h·ªá th·ªëng
  const [services] = useState([
    { name: "API Ch√≠nh", status: "Ho·∫°t ƒë·ªông", color: "green", icon: <ApiOutlined /> },
    { name: "C∆° s·ªü d·ªØ li·ªáu", status: "Ho·∫°t ƒë·ªông", color: "green", icon: <DatabaseOutlined /> },
    { name: "M√°y ch·ªß l∆∞u tr·ªØ", status: "B·∫£o tr√¨", color: "gold", icon: <CloudOutlined /> },
  ]);

  // D·ªØ li·ªáu h∆∞·ªõng d·∫´n nhanh (FAQ)
  const quickHelps = [
    { title: "C√°ch th√™m s·∫£n ph·∫©m m·ªõi", description: "ƒêi t·ªõi m·ª•c 'Qu·∫£n l√Ω kho' ‚Üí 'Th√™m s·∫£n ph·∫©m'." },
    { title: "X·ª≠ l√Ω ƒë∆°n h√†ng b·ªã l·ªói", description: "Trong 'ƒê∆°n h√†ng', ki·ªÉm tra tr·∫°ng th√°i thanh to√°n v√† li√™n h·ªá ƒë·ªëi t√°c v·∫≠n chuy·ªÉn." },
    { title: "Xem b√°o c√°o doanh thu", description: "Ch·ªçn 'B√°o c√°o' ƒë·ªÉ xem bi·ªÉu ƒë·ªì chi ti·∫øt theo th√°ng." },
  ];

  //  FIX: Th√™m l·∫°i d·ªØ li·ªáu c·∫≠p nh·∫≠t h·ªá th·ªëng (updates)
  const [updates] = useState([
    {
      version: "v2.1.0",
      date: "20/10/2025",
      changes: "Th√™m c√°c t√≠nh nƒÉng n√¢ng cao h∆°n v√† t·ªëi ∆∞u hi·ªáu su·∫•t.",
    },
    {
      version: "v2.0.5",
      date: "12/10/2025",
      changes: "C·∫£i thi·ªán giao di·ªán qu·∫£n l√Ω ƒë∆°n h√†ng.",
    },
    {
      version: "v2.0.0",
      date: "11/10/2025",
      changes: "Ra m·∫Øt giao di·ªán Admin Dashboard ƒë·∫ßu ti√™n.",
    },
  ]);


  // Logic ch·∫°y ch·∫©n ƒëo√°n
  const handleRunDiagnosis = () => {
    if (!diagnosisId) {
      message.warning("Vui l√≤ng nh·∫≠p ID ƒê∆°n h√†ng ho·∫∑c ID Ng∆∞·ªùi d√πng!");
      return;
    }
    // Th·ª±c t·∫ø: g·ªçi API ch·∫©n ƒëo√°n t·∫°i ƒë√¢y
    message.loading({ content: `ƒêang ch·∫°y ch·∫©n ƒëo√°n cho ID: ${diagnosisId}...`, key: 'diag' });
    setTimeout(() => {
        message.success({ content: `‚úÖ Ch·∫©n ƒëo√°n ho√†n t·∫•t. Tr·∫°ng th√°i ID ${diagnosisId}: OK.`, key: 'diag', duration: 3 });
        setDiagnosisId("");
    }, 1500);
  };

  // Form g·ª≠i ph·∫£n h·ªìi
  const onFinish = (values) => {
    console.log(values);
    message.success("üéâ G·ª≠i ph·∫£n h·ªìi th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ ƒë√≥ng g√≥p.");
    form.resetFields();
  };

  // H√†m t·∫°o Card chung v·ªõi style ƒë·ªìng b·ªô
  const StyledCard = ({ title, icon, children, style = {} }) => (
    <Card 
        title={
            <Space style={{ color: PRIMARY_PURPLE }}>
                {React.cloneElement(icon, { style: { color: PRIMARY_PURPLE, fontSize: 18 } })}
                <Text strong style={{ color: PRIMARY_PURPLE }}>{title}</Text>
            </Space>
        } 
        bordered={false} 
        style={{ 
            borderRadius: 12, 
            boxShadow: "0 4px 12px rgba(0,0,0,0.08)",
            ...style
        }}
    >
        {children}
    </Card>
  );

  return (
    <div style={{ padding: 24, background: '#f5f7fa', minHeight: '100vh' }}>
      
      {/* --- TI√äU ƒê·ªÄ CH√çNH --- */}
      <Title level={3} style={{ marginBottom: 10, display: 'flex', alignItems: 'center' }}>
        <div 
          style={{
            display: 'inline-flex', alignItems: 'center', justifyContent: 'center',
            backgroundColor: '#e6f4ff', borderRadius: '50%', padding: '8px', 
            marginRight: 10,
          }}
        >
          <InfoCircleOutlined style={{ color: PRIMARY_BLUE, fontSize: '20px' }} />
        </div>
        Trung t√¢m H·ªó tr·ª£ & Ch·∫©n ƒëo√°n
      </Title>
      <Paragraph type="secondary" style={{ marginBottom: 30 }}>
        Ki·ªÉm tra t√¨nh tr·∫°ng h·ªá th·ªëng, t√¨m ki·∫øm t√†i li·ªáu v√† g·ª≠i y√™u c·∫ßu h·ªó tr·ª£ nhanh.
      </Paragraph>

      <Row gutter={[24, 24]}>
        
        {/* --- C·ªòT TR√ÅI (Tools & Status) --- */}
        <Col xs={24} lg={12}>

          {/* 1. C√¥ng c·ª• Ch·∫©n ƒëo√°n nhanh */}
          <StyledCard title="C√¥ng c·ª• Ch·∫©n ƒëo√°n nhanh" icon={<ToolOutlined />}>
            <Space direction="vertical" style={{ width: '100%' }}>
                <Text type="secondary">Nh·∫≠p ID ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i Order ho·∫∑c User:</Text>
                <Input.Group compact>
                    <Input
                        style={{ width: 'calc(100% - 100px)' }}
                        placeholder="Nh·∫≠p Order ID ho·∫∑c User ID"
                        prefix={<SearchOutlined />}
                        value={diagnosisId}
                        onChange={(e) => setDiagnosisId(e.target.value)}
                    />
                    <Button type="primary" onClick={handleRunDiagnosis} style={{ width: 100 }}>
                        Ch·∫°y
                    </Button>
                </Input.Group>
            </Space>
          </StyledCard>
          
          <Divider />

          {/* 2. Tr·∫°ng th√°i h·ªá th·ªëng */}
          <StyledCard title="Tr·∫°ng th√°i d·ªãch v·ª•" icon={<ApiOutlined />}>
            <List
              dataSource={services}
              renderItem={(item) => (
                <List.Item>
                  <Space>
                    {item.icon}
                    <Text strong>{item.name}</Text>
                  </Space>
                  <Tag color={item.color} style={{ fontWeight: 600 }}>
                    {item.status}
                  </Tag>
                </List.Item>
              )}
            />
          </StyledCard>

          {/* 3. C·∫≠p nh·∫≠t h·ªá th·ªëng */}
          <Card
            title={<Space style={{ color: PRIMARY_PURPLE }}><SyncOutlined style={{ color: PRIMARY_PURPLE, fontSize: 18 }} /> <Text strong style={{ color: PRIMARY_PURPLE }}>Nh·∫≠t k√Ω C·∫≠p nh·∫≠t</Text></Space>}
            style={{ marginTop: 24, borderRadius: 12, boxShadow: "0 4px 12px rgba(0,0,0,0.08)" }}
            bordered={false}
          >
            <Timeline
              items={updates.map((u, index) => ({
                color: index === 0 ? "green" : "blue",
                children: (
                  <div>
                    <Text strong>{u.version}</Text> ‚Äì <Text type="secondary">{u.date}</Text>
                    <Paragraph style={{ margin: 0 }}>{u.changes}</Paragraph>
                  </div>
                ),
              }))}
            />
          </Card>
        </Col>

        {/* --- C·ªòT PH·∫¢I (Help & Contact) --- */}
        <Col xs={24} lg={12}>
          
          {/* 4. H∆∞·ªõng d·∫´n nhanh & T√¨m ki·∫øm T√†i li·ªáu */}
          <StyledCard title="T√¨m ki·∫øm H∆∞·ªõng d·∫´n" icon={<QuestionCircleOutlined />}>
            <Search 
                placeholder="T√¨m ki·∫øm FAQ, T√†i li·ªáu h·ªó tr·ª£..." 
                enterButton="T√¨m" 
                size="large"
                style={{ marginBottom: 16 }}
            />
            
            <List
              header={<Text strong>FAQ Ph·ªï bi·∫øn:</Text>}
              dataSource={quickHelps}
              renderItem={(item) => (
                <List.Item style={{ padding: '8px 0' }}>
                  <List.Item.Meta
                    title={<Text style={{ color: PRIMARY_BLUE }}>{item.title}</Text>}
                    description={<Text type="secondary">{item.description}</Text>}
                  />
                </List.Item>
              )}
            />
          </StyledCard>
          
          <Divider />

          {/* 5. Form g·ª≠i ph·∫£n h·ªìi (Ticket n·ªôi b·ªô) */}
          <StyledCard title="G·ª≠i Ph·∫£n h·ªìi (Ticket)" icon={<MessageOutlined />}>
            <Form layout="vertical" form={form} onFinish={onFinish}>
              <Form.Item label="Ph√¢n lo·∫°i" name="category" rules={[{ required: true, message: "Ch·ªçn lo·∫°i y√™u c·∫ßu!" }]}>
                <Select placeholder="Ch·ªçn lo·∫°i y√™u c·∫ßu">
                  <Option value="bug">B√°o l·ªói</Option>
                  <Option value="feature">ƒê·ªÅ xu·∫•t t√≠nh nƒÉng</Option>
                  <Option value="question">C√¢u h·ªèi</Option>
                </Select>
              </Form.Item>
              
              <Form.Item label="T√™n" name="name" rules={[{ required: true, message: "Nh·∫≠p t√™n!" }]}>
                <Input placeholder="T√™n c·ªßa b·∫°n" />
              </Form.Item>
              
              <Form.Item label="N·ªôi dung" name="feedback" rules={[{ required: true, message: "Nh·∫≠p ph·∫£n h·ªìi!" }]}>
                <TextArea rows={3} placeholder="M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ ho·∫∑c ƒë·ªÅ xu·∫•t..." />
              </Form.Item>
              
              <Button type="primary" htmlType="submit" block>
                G·ª≠i Ph·∫£n h·ªìi
              </Button>
            </Form>
          </StyledCard>
          
          {/* 6. Li√™n h·ªá k·ªπ thu·∫≠t */}
         <Card
  title={
    <Space style={{ color: PRIMARY_PURPLE }}>
        {/*  Icon v√† Ti√™u ƒë·ªÅ ƒë·ªìng b·ªô */}
        <PhoneOutlined style={{ color: PRIMARY_PURPLE, fontSize: 18 }} /> 
        <Text strong style={{ color: PRIMARY_PURPLE }}>Li√™n h·ªá K·ªπ thu·∫≠t</Text>
    </Space>
  }
  style={{ marginTop: 24, borderRadius: 12, boxShadow: "0 4px 12px rgba(0,0,0,0.08)" }}
  bordered={false}
>
  {/*  N√¢ng c·∫•p B·ªë c·ª•c: D√πng Row/Col cho Email v√† Hotline */}
  <Row gutter={[16, 16]}>
    {/* Th·∫ª Email */}
    <Col xs={24} sm={12}>
      <Card 
        size="small" 
        style={{ 
          backgroundColor: '#f6ffed', /* N·ªÅn xanh l√° nh·∫°t */
          borderLeft: '4px solid #52c41a', /* ƒê∆∞·ªùng vi·ªÅn n·ªïi b·∫≠t */
        }}
        bordered={false}
      >
        <Paragraph style={{ margin: 0 }}>
          <Text type="secondary" style={{ display: 'block' }}>Email H·ªó tr·ª£</Text>
          <Text strong><MailOutlined style={{ marginRight: 6 }} /> bamin.com</Text>
        </Paragraph>
      </Card>
    </Col>

    {/* Th·∫ª Hotline */}
    <Col xs={24} sm={12}>
      <Card 
        size="small" 
        style={{ 
          backgroundColor: '#e6f4ff', /* N·ªÅn xanh d∆∞∆°ng nh·∫°t */
          borderLeft: '4px solid #1677ff', /* ƒê∆∞·ªùng vi·ªÅn n·ªïi b·∫≠t */
        }}
        bordered={false}
      >
        <Paragraph style={{ margin: 0 }}>
          <Text type="secondary" style={{ display: 'block' }}>Hotline Kh·∫©n c·∫•p</Text>
          <Text strong style={{ color: '#1677ff' }}><PhoneOutlined style={{ marginRight: 6 }} /> 8888 9999</Text>
        </Paragraph>
      </Card>
    </Col>
  </Row>
  
  <Divider style={{ margin: '16px 0 8px 0' }} />

  {/* Th·ªùi gian h·ªó tr·ª£ */}
  <Paragraph style={{ margin: 0 }}>
    <Text type="secondary">Th·ªùi gian h·ªó tr·ª£: Th·ª© 2 - Th·ª© 6 (8h - 17h)</Text>
  </Paragraph>
</Card>
        </Col>
      </Row>

      {/* Footer */}
      <Card style={{ marginTop: 32, textAlign: "center", borderRadius: 12, boxShadow: "0 2px 8px rgba(0,0,0,0.05)" }} bordered={false}>
        <Text type="secondary">
          LMSHOP ADMIN BY MIN
        </Text>
      </Card>
    </div>
  );
};

export default SupportDashboard;